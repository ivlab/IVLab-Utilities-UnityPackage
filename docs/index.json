{
  "api/Global.DictionaryExtentions.html": {
    "href": "api/Global.DictionaryExtentions.html",
    "title": "Class DictionaryExtentions | IVLab Unity Utilities",
    "keywords": "Class DictionaryExtentions Inheritance Object DictionaryExtentions Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class DictionaryExtentions Methods TryGetValue<T1, T2>(Dictionary<T1, T2>, T1) Declaration public static T2 TryGetValue<T1, T2>(this Dictionary<T1, T2> dict, T1 key) Parameters Type Name Description Dictionary <T1, T2> dict T1 key Returns Type Description T2 Type Parameters Name Description T1 T2"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | IVLab Unity Utilities",
    "keywords": "Namespace Global Classes DictionaryExtentions MatrixExtensions TransformExtensions VectorExtentions"
  },
  "api/Global.MatrixExtensions.html": {
    "href": "api/Global.MatrixExtensions.html",
    "title": "Class MatrixExtensions | IVLab Unity Utilities",
    "keywords": "Class MatrixExtensions Inheritance Object MatrixExtensions Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class MatrixExtensions Methods ExtractPosition(Matrix4x4) Declaration public static Vector3 ExtractPosition(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Returns Type Description Vector3 ExtractRotation(Matrix4x4) Declaration public static Quaternion ExtractRotation(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Returns Type Description Quaternion ExtractScale(Matrix4x4) Declaration public static Vector3 ExtractScale(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Returns Type Description Vector3"
  },
  "api/Global.TransformExtensions.html": {
    "href": "api/Global.TransformExtensions.html",
    "title": "Class TransformExtensions | IVLab Unity Utilities",
    "keywords": "Class TransformExtensions Inheritance Object TransformExtensions Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class TransformExtensions Methods FromMatrix(Transform, Matrix4x4) Declaration public static void FromMatrix(this Transform transform, Matrix4x4 matrix) Parameters Type Name Description Transform transform Matrix4x4 matrix SetGlobalScale(Transform, Vector3) Declaration public static void SetGlobalScale(this Transform transform, Vector3 globalScale) Parameters Type Name Description Transform transform Vector3 globalScale"
  },
  "api/Global.VectorExtentions.html": {
    "href": "api/Global.VectorExtentions.html",
    "title": "Class VectorExtentions | IVLab Unity Utilities",
    "keywords": "Class VectorExtentions Inheritance Object VectorExtentions Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class VectorExtentions Methods MaxComponent(Vector3) Declaration public static float MaxComponent(this Vector3 vec) Parameters Type Name Description Vector3 vec Returns Type Description Single MinComponent(Vector3) Declaration public static float MinComponent(this Vector3 vec) Parameters Type Name Description Vector3 vec Returns Type Description Single Reciprocal(Vector3) Declaration public static Vector3 Reciprocal(this Vector3 vec) Parameters Type Name Description Vector3 vec Returns Type Description Vector3 ToHomogeneous(Vector3) Declaration public static Vector4 ToHomogeneous(this Vector3 vector) Parameters Type Name Description Vector3 vector Returns Type Description Vector4"
  },
  "api/IVLab.Utilities.BBoxVis.html": {
    "href": "api/IVLab.Utilities.BBoxVis.html",
    "title": "Class BBoxVis | IVLab Unity Utilities",
    "keywords": "Class BBoxVis Bounding box visualizer for the Unity editor. Look in the inspector panel to see the mapping between names and colors and/or change the colors associated with bounding boxes. Inheritance Object Singleton < BBoxVis > BBoxVis Inherited Members Singleton<BBoxVis>.GetInstance() Singleton<BBoxVis>.Instance Singleton<BBoxVis>.Awake() Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class BBoxVis : Singleton<BBoxVis> Methods AddBBox(String, Bounds, Matrix4x4) Add a bounding box to be visualized. Ignores duplicate names. Declaration public void AddBBox(string name, Bounds bounds, Matrix4x4 localToWorldMatrix) Parameters Type Name Description String name Human-readable name for the bounding box Bounds bounds The bounds to be displayed Matrix4x4 localToWorldMatrix Any matrix transformation to be applied to the bounding box, otherwise use the Identity Examples using IVLab.Utilities; using UnityEngine; public class Boxing : MonoBehaviour { void Start() { Bounds testBounds = new Bounds(new Vector3(0, 10, 0), Vector3.one); BBoxVis.AddBBox(\"test box\", testBounds, Matrix4x4.identity); } } Clear() Clear all bounding boxes from visualization Declaration public void Clear()"
  },
  "api/IVLab.Utilities.Boundable.html": {
    "href": "api/IVLab.Utilities.Boundable.html",
    "title": "Class Boundable | IVLab Unity Utilities",
    "keywords": "Class Boundable Inheritance Object Boundable Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class Boundable Methods EncapsulateAll(IEnumerable<IBoundable>) Declaration public static Bounds EncapsulateAll(IEnumerable<IBoundable> boundables) Parameters Type Name Description IEnumerable < IBoundable > boundables Returns Type Description Bounds"
  },
  "api/IVLab.Utilities.BoundsExtentions.html": {
    "href": "api/IVLab.Utilities.BoundsExtentions.html",
    "title": "Class BoundsExtentions | IVLab Unity Utilities",
    "keywords": "Class BoundsExtentions Inheritance Object BoundsExtentions Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class BoundsExtentions Methods MaxDimension(Bounds) [Extension Method] Returns the maximum dimension (x, y, or z) of the bounds object. Declaration public static float MaxDimension(this Bounds bounds) Parameters Type Name Description Bounds bounds Returns Type Description Single"
  },
  "api/IVLab.Utilities.BoundsOutline.html": {
    "href": "api/IVLab.Utilities.BoundsOutline.html",
    "title": "Class BoundsOutline | IVLab Unity Utilities",
    "keywords": "Class BoundsOutline Inheritance Object BoundsOutline Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class BoundsOutline : MonoBehaviour Properties ToOutline Declaration public Bounds ToOutline { get; set; } Property Value Type Description Bounds WireColor Declaration public Color WireColor { get; set; } Property Value Type Description Color Methods Init(GameObject) Declaration public static BoundsOutline Init(GameObject go) Parameters Type Name Description GameObject go Returns Type Description BoundsOutline"
  },
  "api/IVLab.Utilities.ByteCompression.html": {
    "href": "api/IVLab.Utilities.ByteCompression.html",
    "title": "Class ByteCompression | IVLab Unity Utilities",
    "keywords": "Class ByteCompression Compression/decopression (gzip) methods for byte arrays Inheritance Object ByteCompression Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class ByteCompression Methods Compress(Byte[]) Declaration public static byte[] Compress(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description Byte [] CompressAsync(Byte[], CancellationToken) Declaration public static async Task<byte[]> CompressAsync(byte[] buffer, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer CancellationToken cancellationToken Returns Type Description Task < Byte []> Decompress(Byte[]) Declaration public static byte[] Decompress(byte[] gzBuffer) Parameters Type Name Description Byte [] gzBuffer Returns Type Description Byte [] DecompressAsync(Byte[], CancellationToken) Declaration public static async Task<byte[]> DecompressAsync(byte[] gzBuffer, CancellationToken cancellationToken) Parameters Type Name Description Byte [] gzBuffer CancellationToken cancellationToken Returns Type Description Task < Byte []>"
  },
  "api/IVLab.Utilities.ByteMethods.html": {
    "href": "api/IVLab.Utilities.ByteMethods.html",
    "title": "Class ByteMethods | IVLab Unity Utilities",
    "keywords": "Class ByteMethods Static helper methods for byte arrays Inheritance Object ByteMethods Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class ByteMethods Methods ByteArrayToObject(Byte[]) Declaration public static object ByteArrayToObject(byte[] arrBytes) Parameters Type Name Description Byte [] arrBytes Returns Type Description Object ObjectToByteArray(Object) Declaration public static byte[] ObjectToByteArray(object obj) Parameters Type Name Description Object obj Returns Type Description Byte []"
  },
  "api/IVLab.Utilities.CameraFrustumGizmo.html": {
    "href": "api/IVLab.Utilities.CameraFrustumGizmo.html",
    "title": "Class CameraFrustumGizmo | IVLab Unity Utilities",
    "keywords": "Class CameraFrustumGizmo Inheritance Object CameraFrustumGizmo Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class CameraFrustumGizmo : MonoBehaviour Methods OnDrawGizmos() Declaration public virtual void OnDrawGizmos()"
  },
  "api/IVLab.Utilities.ClickAndDragCamera.html": {
    "href": "api/IVLab.Utilities.ClickAndDragCamera.html",
    "title": "Class ClickAndDragCamera | IVLab Unity Utilities",
    "keywords": "Class ClickAndDragCamera Clickable and draggable camera for trackball camera movement in Unity. Can optionally enable \"acceleration\" to avoid users getting sick in situations like a planetarium. Inheritance Object ClickAndDragCamera Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class ClickAndDragCamera : MonoBehaviour Fields axesWidget Declaration public GameObject axesWidget Field Value Type Description GameObject panSpeed Declaration public float panSpeed Field Value Type Description Single panWidget Declaration public GameObject panWidget Field Value Type Description GameObject rotationSpeed Declaration public float rotationSpeed Field Value Type Description Single rotationWidget Declaration public GameObject rotationWidget Field Value Type Description GameObject showWidgets Declaration public bool showWidgets Field Value Type Description Boolean truckWidget Declaration public GameObject truckWidget Field Value Type Description GameObject weightedControl Declaration public bool weightedControl Field Value Type Description Boolean zoomSpeed Declaration public float zoomSpeed Field Value Type Description Single Methods Orbit(Single) Declaration public void Orbit(float amt) Parameters Type Name Description Single amt Rotate(Single) Declaration public void Rotate(float amt) Parameters Type Name Description Single amt Tilt(Single) Declaration public void Tilt(float amt) Parameters Type Name Description Single amt Zoom(Single) Declaration public void Zoom(float amt) Parameters Type Name Description Single amt"
  },
  "api/IVLab.Utilities.ClickAndDragRotation.html": {
    "href": "api/IVLab.Utilities.ClickAndDragRotation.html",
    "title": "Class ClickAndDragRotation | IVLab Unity Utilities",
    "keywords": "Class ClickAndDragRotation Attach to an object that should be rotated when the screen is clicked and dragged Inheritance Object ClickAndDragRotation Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class ClickAndDragRotation : MonoBehaviour Methods Orbit(Single) Declaration public void Orbit(float amt) Parameters Type Name Description Single amt Tilt(Single) Declaration public void Tilt(float amt) Parameters Type Name Description Single amt"
  },
  "api/IVLab.Utilities.ColormapUtilities.html": {
    "href": "api/IVLab.Utilities.ColormapUtilities.html",
    "title": "Class ColormapUtilities | IVLab Unity Utilities",
    "keywords": "Class ColormapUtilities Inheritance Object ColormapUtilities Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class ColormapUtilities Methods ColormapFromFile(String, Int32, Int32) Declaration public static Texture2D ColormapFromFile(string filePath, int texWidth = 1024, int texHeight = 100) Parameters Type Name Description String filePath Int32 texWidth Int32 texHeight Returns Type Description Texture2D ColormapFromXML(String, Int32, Int32) Declaration public static Texture2D ColormapFromXML(string xmlText, int texWidth, int texHeight) Parameters Type Name Description String xmlText Int32 texWidth Int32 texHeight Returns Type Description Texture2D SaveTextureAsPng(String, Texture2D) Declaration public static void SaveTextureAsPng(string path, Texture2D texture) Parameters Type Name Description String path Texture2D texture"
  },
  "api/IVLab.Utilities.ColorUtilities.html": {
    "href": "api/IVLab.Utilities.ColorUtilities.html",
    "title": "Class ColorUtilities | IVLab Unity Utilities",
    "keywords": "Class ColorUtilities Inheritance Object ColorUtilities Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class ColorUtilities Methods ColorToHex(Color) Converts a Unity color into an HTML hex color (e.g. #00ff00 ) Declaration public static string ColorToHex(Color color) Parameters Type Name Description Color color Returns Type Description String HexToColor(String) Converts a hex HTML color (e.g. #00ff00 ) into a Unity color Declaration public static Color HexToColor(string hexColor) Parameters Type Name Description String hexColor Returns Type Description Color"
  },
  "api/IVLab.Utilities.ContainBoundables.html": {
    "href": "api/IVLab.Utilities.ContainBoundables.html",
    "title": "Class ContainBoundables | IVLab Unity Utilities",
    "keywords": "Class ContainBoundables Contain several Bounds objects within a new bounds object Inheritance Object ContainBoundables Implements IBoundable Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class ContainBoundables : MonoBehaviour, IBoundable Fields autoUpdate Declaration public bool autoUpdate Field Value Type Description Boolean Properties Bounds Declaration public Bounds Bounds { get; set; } Property Value Type Description Bounds ScaleObject Declaration public Transform ScaleObject { get; protected set; } Property Value Type Description Transform Methods AddGameObject(GameObject, Boolean) Declaration public void AddGameObject(GameObject gameObject, bool worldPositionStays = false) Parameters Type Name Description GameObject gameObject Boolean worldPositionStays Init(GameObject) Declaration public static void Init(GameObject go) Parameters Type Name Description GameObject go UpdateScale() Declaration public void UpdateScale() Implements IBoundable"
  },
  "api/IVLab.Utilities.CoordConversion.CoordSystem.Axis.html": {
    "href": "api/IVLab.Utilities.CoordConversion.CoordSystem.Axis.html",
    "title": "Enum CoordConversion.CoordSystem.Axis | IVLab Unity Utilities",
    "keywords": "Enum CoordConversion.CoordSystem.Axis Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public enum Axis Fields Name Description NegX NegY NegZ PosX PosY PosZ"
  },
  "api/IVLab.Utilities.CoordConversion.CoordSystem.Handedness.html": {
    "href": "api/IVLab.Utilities.CoordConversion.CoordSystem.Handedness.html",
    "title": "Enum CoordConversion.CoordSystem.Handedness | IVLab Unity Utilities",
    "keywords": "Enum CoordConversion.CoordSystem.Handedness Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public enum Handedness Fields Name Description LeftHanded RightHanded"
  },
  "api/IVLab.Utilities.CoordConversion.CoordSystem.html": {
    "href": "api/IVLab.Utilities.CoordConversion.CoordSystem.html",
    "title": "Class CoordConversion.CoordSystem | IVLab Unity Utilities",
    "keywords": "Class CoordConversion.CoordSystem This small internal class defines a coordinate system convention based on knowing 3 things: Whether right-handed or left-handed coordinates are used. Which direction is considered \"Up\" Which direction is considered \"Forward\" Inheritance Object CoordConversion.CoordSystem Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class CoordSystem Constructors CoordSystem(CoordConversion.CoordSystem.Handedness, CoordConversion.CoordSystem.Axis, CoordConversion.CoordSystem.Axis) Declaration public CoordSystem(CoordConversion.CoordSystem.Handedness h, CoordConversion.CoordSystem.Axis up, CoordConversion.CoordSystem.Axis forward) Parameters Type Name Description CoordConversion.CoordSystem.Handedness h CoordConversion.CoordSystem.Axis up CoordConversion.CoordSystem.Axis forward Fields forwardAxis Declaration public CoordConversion.CoordSystem.Axis forwardAxis Field Value Type Description CoordConversion.CoordSystem.Axis handedness Declaration public CoordConversion.CoordSystem.Handedness handedness Field Value Type Description CoordConversion.CoordSystem.Handedness upAxis Declaration public CoordConversion.CoordSystem.Axis upAxis Field Value Type Description CoordConversion.CoordSystem.Axis Properties forwardVector Declaration public Vector3 forwardVector { get; } Property Value Type Description Vector3 upVector Declaration public Vector3 upVector { get; } Property Value Type Description Vector3"
  },
  "api/IVLab.Utilities.CoordConversion.html": {
    "href": "api/IVLab.Utilities.CoordConversion.html",
    "title": "Class CoordConversion | IVLab Unity Utilities",
    "keywords": "Class CoordConversion Inheritance Object CoordConversion Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class CoordConversion Fields UnityCS Declaration public static CoordConversion.CoordSystem UnityCS Field Value Type Description CoordConversion.CoordSystem Methods FromUnity(Matrix4x4, CoordConversion.CoordSystem) Converts a rigid body transformation matrix defined in Unity's coordinate system convention (left-handed, +Y = Up, +Z = Forward) into some new coordinate system convention. Declaration public static Matrix4x4 FromUnity(Matrix4x4 unityMat, CoordConversion.CoordSystem newCS) Parameters Type Name Description Matrix4x4 unityMat CoordConversion.CoordSystem newCS Returns Type Description Matrix4x4 FromUnity(Quaternion, CoordConversion.CoordSystem) Converts a quaternion defined Unity's coordinate system convention (left-handed, +Y = Up, +Z = Forward) into some new coordinate system convention. Declaration public static Quaternion FromUnity(Quaternion unityQuat, CoordConversion.CoordSystem newCS) Parameters Type Name Description Quaternion unityQuat CoordConversion.CoordSystem newCS Returns Type Description Quaternion FromUnity(Vector3, CoordConversion.CoordSystem) Converts a point or vector defined Unity's coordinate system convention (left-handed, +Y = Up, +Z = Forward) into some new coordinate system convention. Declaration public static Vector3 FromUnity(Vector3 unityVector, CoordConversion.CoordSystem newCS) Parameters Type Name Description Vector3 unityVector CoordConversion.CoordSystem newCS Returns Type Description Vector3 ToUnity(Matrix4x4, CoordConversion.CoordSystem) Converts a rigid body transformation matrix (no scaling) defined according to the provided origCS coordinate system convention into a transformation matrix in Unity's coordinate system convention (left-handed, +Y = Up, +Z = Forward). Declaration public static Matrix4x4 ToUnity(Matrix4x4 origMat, CoordConversion.CoordSystem origCS) Parameters Type Name Description Matrix4x4 origMat CoordConversion.CoordSystem origCS Returns Type Description Matrix4x4 ToUnity(Quaternion, CoordConversion.CoordSystem) Converts a quaternion defined according to the provided origCS coordinate system convention into a vector in Unity's coordinate system convention (left-handed, +Y = Up, +Z = Forward). Declaration public static Quaternion ToUnity(Quaternion origQuat, CoordConversion.CoordSystem origCS) Parameters Type Name Description Quaternion origQuat CoordConversion.CoordSystem origCS Returns Type Description Quaternion ToUnity(Vector3, CoordConversion.CoordSystem) Converts a point or vector defined according to the provided origCS coordinate system convention into a vector in Unity's coordinate system convention (left-handed, +Y = Up, +Z = Forward). Declaration public static Vector3 ToUnity(Vector3 origVector, CoordConversion.CoordSystem origCS) Parameters Type Name Description Vector3 origVector CoordConversion.CoordSystem origCS Returns Type Description Vector3"
  },
  "api/IVLab.Utilities.CUIColorPicker.html": {
    "href": "api/IVLab.Utilities.CUIColorPicker.html",
    "title": "Class CUIColorPicker | IVLab Unity Utilities",
    "keywords": "Class CUIColorPicker Color picker UI widget, gathered from https://github.com/SnapshotGames/cui_color_picker/blob/master/Assets/CUIColorPicker.cs Inheritance Object CUIColorPicker Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class CUIColorPicker : MonoBehaviour Properties Color Declaration public Color Color { get; set; } Property Value Type Description Color Methods SetOnValueChangeCallback(Action<Color>) Declaration public void SetOnValueChangeCallback(Action<Color> onValueChange) Parameters Type Name Description Action < Color > onValueChange SetRandomColor() Declaration public void SetRandomColor()"
  },
  "api/IVLab.Utilities.DataSpace.html": {
    "href": "api/IVLab.Utilities.DataSpace.html",
    "title": "Class DataSpace | IVLab Unity Utilities",
    "keywords": "Class DataSpace Inheritance Object Singleton < DataSpace > DataSpace Inherited Members Singleton<DataSpace>.GetInstance() Singleton<DataSpace>.Instance Singleton<DataSpace>.Awake() Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class DataSpace : Singleton<DataSpace> Properties DataBounds Declaration public Bounds DataBounds { get; set; } Property Value Type Description Bounds DataTransform Declaration public Matrix4x4 DataTransform { get; set; } Property Value Type Description Matrix4x4"
  },
  "api/IVLab.Utilities.EscapeToQuit.html": {
    "href": "api/IVLab.Utilities.EscapeToQuit.html",
    "title": "Class EscapeToQuit | IVLab Unity Utilities",
    "keywords": "Class EscapeToQuit Attach this script to any GameObject to stop the application when the user presses esc . Inheritance Object EscapeToQuit Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class EscapeToQuit : MonoBehaviour Methods Update() Declaration public void Update()"
  },
  "api/IVLab.Utilities.FunctionDebugger.html": {
    "href": "api/IVLab.Utilities.FunctionDebugger.html",
    "title": "Class FunctionDebugger | IVLab Unity Utilities",
    "keywords": "Class FunctionDebugger Attach this component to a GameObject to debug specific methods on a MonoBehaviour. To use, add a [FunctionDebugger] attribute to the methods you wish to be trigger-able from the Unity editor. Inheritance Object FunctionDebugger Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class FunctionDebugger : MonoBehaviour"
  },
  "api/IVLab.Utilities.FunctionDebuggerAttribute.html": {
    "href": "api/IVLab.Utilities.FunctionDebuggerAttribute.html",
    "title": "Class FunctionDebuggerAttribute | IVLab Unity Utilities",
    "keywords": "Class FunctionDebuggerAttribute Inheritance Object FunctionDebuggerAttribute Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class FunctionDebuggerAttribute : Attribute"
  },
  "api/IVLab.Utilities.GenericObjectPool.html": {
    "href": "api/IVLab.Utilities.GenericObjectPool.html",
    "title": "Class GenericObjectPool | IVLab Unity Utilities",
    "keywords": "Class GenericObjectPool Object pool to be used when trying to avoid unnecessary allocations in managed C#. Inheritance Object Singleton < GenericObjectPool > GenericObjectPool Inherited Members Singleton<GenericObjectPool>.GetInstance() Singleton<GenericObjectPool>.Instance Singleton<GenericObjectPool>.Awake() Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class GenericObjectPool : Singleton<GenericObjectPool> Methods GetObjectFromPool(String, Action<GameObject>) Declaration public GameObject GetObjectFromPool(string poolName, Action<GameObject> newObjectProcedure) Parameters Type Name Description String poolName Action < GameObject > newObjectProcedure Returns Type Description GameObject GetObjectFromPool(String, Transform) Declaration public GameObject GetObjectFromPool(string poolName, Transform newParent = null) Parameters Type Name Description String poolName Transform newParent Returns Type Description GameObject GetObjectFromPool(String, Transform, Action<GameObject>) Declaration public GameObject GetObjectFromPool(string poolName, Transform newParent, Action<GameObject> newObjectProcedure) Parameters Type Name Description String poolName Transform newParent Action < GameObject > newObjectProcedure Returns Type Description GameObject GetObjectFromPool<T>(Action<GameObject>) Declaration public T GetObjectFromPool<T>(Action<GameObject> newObjectProcedure) where T : MonoBehaviour Parameters Type Name Description Action < GameObject > newObjectProcedure Returns Type Description T Type Parameters Name Description T GetObjectFromPool<T>(String, Action<GameObject>) Declaration public T GetObjectFromPool<T>(string poolName, Action<GameObject> newObjectProcedure) where T : MonoBehaviour Parameters Type Name Description String poolName Action < GameObject > newObjectProcedure Returns Type Description T Type Parameters Name Description T GetObjectFromPool<T>(String, Transform, Action<GameObject>) Declaration public T GetObjectFromPool<T>(string poolName, Transform newParent, Action<GameObject> newObjectProcedure) where T : MonoBehaviour Parameters Type Name Description String poolName Transform newParent Action < GameObject > newObjectProcedure Returns Type Description T Type Parameters Name Description T GetObjectFromPool<T>(Transform) Declaration public T GetObjectFromPool<T>(Transform newParent = null) where T : MonoBehaviour Parameters Type Name Description Transform newParent Returns Type Description T Type Parameters Name Description T ReturnObjectToPool(GameObject) Declaration public void ReturnObjectToPool(GameObject gameObject) Parameters Type Name Description GameObject gameObject ReturnObjectToPool(PooledObject) Declaration public void ReturnObjectToPool(PooledObject pooledObject) Parameters Type Name Description PooledObject pooledObject"
  },
  "api/IVLab.Utilities.html": {
    "href": "api/IVLab.Utilities.html",
    "title": "Namespace IVLab.Utilities | IVLab Unity Utilities",
    "keywords": "Namespace IVLab.Utilities Classes BBoxVis Bounding box visualizer for the Unity editor. Look in the inspector panel to see the mapping between names and colors and/or change the colors associated with bounding boxes. Boundable BoundsExtentions BoundsOutline ByteCompression Compression/decopression (gzip) methods for byte arrays ByteMethods Static helper methods for byte arrays CameraFrustumGizmo ClickAndDragCamera Clickable and draggable camera for trackball camera movement in Unity. Can optionally enable \"acceleration\" to avoid users getting sick in situations like a planetarium. ClickAndDragRotation Attach to an object that should be rotated when the screen is clicked and dragged ColormapUtilities ColorUtilities ContainBoundables Contain several Bounds objects within a new bounds object CoordConversion CoordConversion.CoordSystem This small internal class defines a coordinate system convention based on knowing 3 things: Whether right-handed or left-handed coordinates are used. Which direction is considered \"Up\" Which direction is considered \"Forward\" CUIColorPicker Color picker UI widget, gathered from https://github.com/SnapshotGames/cui_color_picker/blob/master/Assets/CUIColorPicker.cs DataSpace EscapeToQuit Attach this script to any GameObject to stop the application when the user presses esc . FunctionDebugger Attach this component to a GameObject to debug specific methods on a MonoBehaviour. To use, add a [FunctionDebugger] attribute to the methods you wish to be trigger-able from the Unity editor. FunctionDebuggerAttribute GenericObjectPool Object pool to be used when trying to avoid unnecessary allocations in managed C#. LHtoRHConversion NormalizeMeshScale Use this utility when you have a GIGANTIC mesh that you need to normalize into room space, say 2x2x2 meters. NOTE: This is ONLY for use with meshes. Take a look at NormalizeWithinBounds.cs for a more generic version. NormalizeWithinBounds Utilities for normalizing a Unity Bounds object to fit within another bounds object. ObjectRecycler PooledObject RHtoLHConversion RoomSpace Screenshot Singleton<T> Inherit from this base class to create a singleton. StreamMethods Methods for reading/writing from a stream (e.g. a socket) TextureUtilities TransformDebugger Shows more verbose transform information than Unity's built-in Transform component display. UnityThreadScheduler Unity doesn't play nicely with threads, so the UnityThreadScheduler allows a programmer to better deal with asynchronous and threaded code. UnityThreadScheduler needs to either be attached to a GameObject, or UnityThreadScheduler.GetInstance() needs to be called somewhere in the code in order to use it. VirtualSpace XROMMCoordinates Uses the CoordConversion class to provide routines for converting from XROMM coordinates to Unity coordinates. XROMM coordinates are: Right-Handed Up = +Z Forward = +Y Right = +X Unity coordinates are: Left-Handed Up = +Y Forward = +Z Right = +X Interfaces IBoundable Enums CoordConversion.CoordSystem.Axis CoordConversion.CoordSystem.Handedness UnityThreadScheduler.UnityMethod"
  },
  "api/IVLab.Utilities.IBoundable.html": {
    "href": "api/IVLab.Utilities.IBoundable.html",
    "title": "Interface IBoundable | IVLab Unity Utilities",
    "keywords": "Interface IBoundable Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public interface IBoundable Properties Bounds Declaration Bounds Bounds { get; } Property Value Type Description Bounds"
  },
  "api/IVLab.Utilities.LHtoRHConversion.html": {
    "href": "api/IVLab.Utilities.LHtoRHConversion.html",
    "title": "Class LHtoRHConversion | IVLab Unity Utilities",
    "keywords": "Class LHtoRHConversion Inheritance Object LHtoRHConversion Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class LHtoRHConversion Methods ConvertLeftHandToRightHand(Vector3, Quaternion) Declaration public static List<Vector3> ConvertLeftHandToRightHand(Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 position Quaternion rotation Returns Type Description List < Vector3 > ConvertLeftToRighGraphically(Vector3, Quaternion) Declaration public static List<Vector3> ConvertLeftToRighGraphically(Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 position Quaternion rotation Returns Type Description List < Vector3 > getRHTrans(GameObject) Declaration public static Matrix4x4 getRHTrans(GameObject gb) Parameters Type Name Description GameObject gb Returns Type Description Matrix4x4 UnityToJointTrack(GameObject) Declaration public static Matrix4x4 UnityToJointTrack(GameObject gb) Parameters Type Name Description GameObject gb Returns Type Description Matrix4x4 XYZtoZXY(Vector3) Declaration public static Vector3 XYZtoZXY(Vector3 eularAnglesIn) Parameters Type Name Description Vector3 eularAnglesIn Returns Type Description Vector3"
  },
  "api/IVLab.Utilities.NormalizeMeshScale.html": {
    "href": "api/IVLab.Utilities.NormalizeMeshScale.html",
    "title": "Class NormalizeMeshScale | IVLab Unity Utilities",
    "keywords": "Class NormalizeMeshScale Use this utility when you have a GIGANTIC mesh that you need to normalize into room space, say 2x2x2 meters. NOTE: This is ONLY for use with meshes. Take a look at NormalizeWithinBounds.cs for a more generic version. Inheritance Object NormalizeMeshScale Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class NormalizeMeshScale : MonoBehaviour Fields adjustToCenter Declaration public bool adjustToCenter Field Value Type Description Boolean normalizedScaleMeters Declaration public float normalizedScaleMeters Field Value Type Description Single rotateToTable Declaration public bool rotateToTable Field Value Type Description Boolean"
  },
  "api/IVLab.Utilities.NormalizeWithinBounds.html": {
    "href": "api/IVLab.Utilities.NormalizeWithinBounds.html",
    "title": "Class NormalizeWithinBounds | IVLab Unity Utilities",
    "keywords": "Class NormalizeWithinBounds Utilities for normalizing a Unity Bounds object to fit within another bounds object. Inheritance Object NormalizeWithinBounds Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class NormalizeWithinBounds Methods Normalize(Bounds, Bounds, out Matrix4x4, out Bounds) Normalize the toBeContained bounds to be within the container bounds and save the transform and resulting bounds. The side length ratios of toBeContained will match the contained output; contained is the uniformly scaled version of the original data bounding box. Declaration public static void Normalize(Bounds container, Bounds toBeContained, out Matrix4x4 transform, out Bounds contained) Parameters Type Name Description Bounds container Bounds toBeContained Matrix4x4 transform Bounds contained NormalizeAndExpand(Bounds, Bounds, ref Bounds, ref Matrix4x4, ref Bounds) Normalize a bounds object to be contained within another, but also expand it within that container if necessary. Useful for importing new data objects with a common reference frame and the new one is bigger than the previous one. Declaration public static bool NormalizeAndExpand(Bounds container, Bounds thisDataSpaceBounds, ref Bounds boundsAll, ref Matrix4x4 transform, ref Bounds dataSpaceBoundsAll) Parameters Type Name Description Bounds container The resulting bounds will be contained within these bounds Bounds thisDataSpaceBounds The original bounds (in data space) of this data object (the thing we're trying to contain inside The current bounds of all data objects (in room [container] space). Not modified if the data space is not expanded. The resulting transformation between data and room space (not modified if not expanded). container ) Bounds boundsAll Matrix4x4 transform Bounds dataSpaceBoundsAll In data space, the current bounds of all data objects together. Returns Type Description Boolean Boolean whether or not the bounds were expanded."
  },
  "api/IVLab.Utilities.ObjectRecycler.html": {
    "href": "api/IVLab.Utilities.ObjectRecycler.html",
    "title": "Class ObjectRecycler | IVLab Unity Utilities",
    "keywords": "Class ObjectRecycler Inheritance Object ObjectRecycler Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class ObjectRecycler Methods Recycle(GameObject, Boolean) Declaration public static void Recycle(GameObject gameObject, bool recurse = true) Parameters Type Name Description GameObject gameObject Boolean recurse Recycle(MonoBehaviour, Boolean) Declaration public static void Recycle(MonoBehaviour component, bool recurse = true) Parameters Type Name Description MonoBehaviour component Boolean recurse RecycleChildren(GameObject, Boolean) Declaration public static void RecycleChildren(GameObject gameObject, bool recurse = false) Parameters Type Name Description GameObject gameObject Boolean recurse"
  },
  "api/IVLab.Utilities.PooledObject.html": {
    "href": "api/IVLab.Utilities.PooledObject.html",
    "title": "Class PooledObject | IVLab Unity Utilities",
    "keywords": "Class PooledObject Inheritance Object PooledObject Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class PooledObject : MonoBehaviour Properties PoolName Declaration public string PoolName { get; } Property Value Type Description String Methods Create(String, Transform) Declaration public static GameObject Create(string poolName, Transform newParent = null) Parameters Type Name Description String poolName Transform newParent Returns Type Description GameObject IsPoolable(GameObject) Declaration public static bool IsPoolable(GameObject gameObject) Parameters Type Name Description GameObject gameObject Returns Type Description Boolean MakePoolable(GameObject, String) Declaration public static GameObject MakePoolable(GameObject gameObject, string poolName) Parameters Type Name Description GameObject gameObject String poolName Returns Type Description GameObject"
  },
  "api/IVLab.Utilities.RHtoLHConversion.html": {
    "href": "api/IVLab.Utilities.RHtoLHConversion.html",
    "title": "Class RHtoLHConversion | IVLab Unity Utilities",
    "keywords": "Class RHtoLHConversion Inheritance Object RHtoLHConversion Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class RHtoLHConversion Methods negateX(Vector3) Declaration public static Vector3 negateX(Vector3 rhVector) Parameters Type Name Description Vector3 rhVector Returns Type Description Vector3 RHzUpVector3ToLHyUpVector3(Vector3) Declaration public static Vector3 RHzUpVector3ToLHyUpVector3(Vector3 rhZupVector) Parameters Type Name Description Vector3 rhZupVector Returns Type Description Vector3 ToLeftHanded(Quaternion) Declaration public static Quaternion ToLeftHanded(Quaternion rhQuat) Parameters Type Name Description Quaternion rhQuat Returns Type Description Quaternion"
  },
  "api/IVLab.Utilities.RoomSpace.html": {
    "href": "api/IVLab.Utilities.RoomSpace.html",
    "title": "Class RoomSpace | IVLab Unity Utilities",
    "keywords": "Class RoomSpace Inheritance Object Singleton < RoomSpace > RoomSpace Inherited Members Singleton<RoomSpace>.GetInstance() Singleton<RoomSpace>.Instance Singleton<RoomSpace>.Awake() Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class RoomSpace : Singleton<RoomSpace>"
  },
  "api/IVLab.Utilities.Screenshot.html": {
    "href": "api/IVLab.Utilities.Screenshot.html",
    "title": "Class Screenshot | IVLab Unity Utilities",
    "keywords": "Class Screenshot Inheritance Object Screenshot Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class Screenshot : MonoBehaviour Methods CaptureView(Int32, Int32, Boolean, Int32) Declaration public byte[] CaptureView(int width, int height, bool transparentBackground, int jpgQuality) Parameters Type Name Description Int32 width Int32 height Boolean transparentBackground Int32 jpgQuality Returns Type Description Byte [] SaveScreenshot(String, Int32, Int32, Boolean, Int32) Declaration public void SaveScreenshot(string filepath, int width, int height, bool transparentBackground, int jpgQuality = -1) Parameters Type Name Description String filepath Int32 width Int32 height Boolean transparentBackground Int32 jpgQuality SaveScreenshotOnLateUpdate(String, Int32, Int32, Boolean, Int32) Save a screenshot but run the screenshot in LateUpdate() instead of right now Declaration public void SaveScreenshotOnLateUpdate(string filepath, int width, int height, bool transparentBackground, int jpgQuality = -1) Parameters Type Name Description String filepath Int32 width Int32 height Boolean transparentBackground Int32 jpgQuality"
  },
  "api/IVLab.Utilities.Singleton-1.html": {
    "href": "api/IVLab.Utilities.Singleton-1.html",
    "title": "Class Singleton<T> | IVLab Unity Utilities",
    "keywords": "Class Singleton<T> Inherit from this base class to create a singleton. Inheritance Object Singleton<T> BBoxVis DataSpace GenericObjectPool RoomSpace UnityThreadScheduler VirtualSpace Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class Singleton<T> : MonoBehaviour where T : MonoBehaviour Type Parameters Name Description T Examples public class MyClassName : Singleton<MyClassName> { } // MyClassName will now be a \"Singleton\" and can be accessed via .Instance or .GetInstance() public class Testing : MonoBehaviour { void Start() { Debug.Log(MyClassName.Instance.GetHashCode()); } } Properties Instance Access singleton instance through this propriety. Declaration public static T Instance { get; } Property Value Type Description T Methods Awake() Declaration protected virtual void Awake() GetInstance() Declaration public static T GetInstance() Returns Type Description T"
  },
  "api/IVLab.Utilities.StreamMethods.html": {
    "href": "api/IVLab.Utilities.StreamMethods.html",
    "title": "Class StreamMethods | IVLab Unity Utilities",
    "keywords": "Class StreamMethods Methods for reading/writing from a stream (e.g. a socket) Inheritance Object StreamMethods Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class StreamMethods Methods ReadBytesFromStream(Stream) Declaration public static byte[] ReadBytesFromStream(Stream s) Parameters Type Name Description Stream s Returns Type Description Byte [] ReadBytesFromStreamAsync(Stream, CancellationToken) Declaration public static async Task<byte[]> ReadBytesFromStreamAsync(Stream s, CancellationToken cancellationToken) Parameters Type Name Description Stream s CancellationToken cancellationToken Returns Type Description Task < Byte []> ReadIntFromStream(Stream) Declaration public static int ReadIntFromStream(Stream s) Parameters Type Name Description Stream s Returns Type Description Int32 ReadIntFromStreamAsync(Stream, CancellationToken) Declaration public static async Task<int> ReadIntFromStreamAsync(Stream s, CancellationToken cancellationToken) Parameters Type Name Description Stream s CancellationToken cancellationToken Returns Type Description Task < Int32 > ReadObjectFromStream(Stream) Declaration public static object ReadObjectFromStream(Stream s) Parameters Type Name Description Stream s Returns Type Description Object ReadObjectFromStreamAsync(Stream, CancellationToken) Declaration public static async Task<object> ReadObjectFromStreamAsync(Stream s, CancellationToken cancellationToken) Parameters Type Name Description Stream s CancellationToken cancellationToken Returns Type Description Task < Object > ReadStringFromStream(Stream) Declaration public static string ReadStringFromStream(Stream s) Parameters Type Name Description Stream s Returns Type Description String ReadStringFromStreamAsync(Stream, CancellationToken) Declaration public static async Task<string> ReadStringFromStreamAsync(Stream s, CancellationToken cancellationToken) Parameters Type Name Description Stream s CancellationToken cancellationToken Returns Type Description Task < String > WriteBytestoStream(Stream, Byte[]) Declaration public static void WriteBytestoStream(Stream s, byte[] data) Parameters Type Name Description Stream s Byte [] data WriteBytestoStreamAsync(Stream, Byte[], CancellationToken) Declaration public static async Task WriteBytestoStreamAsync(Stream s, byte[] data, CancellationToken cancellationToken) Parameters Type Name Description Stream s Byte [] data CancellationToken cancellationToken Returns Type Description Task WriteIntToStream(Stream, Int32) Declaration public static void WriteIntToStream(Stream s, int value) Parameters Type Name Description Stream s Int32 value WriteIntToStreamAsync(Stream, Int32, CancellationToken) Declaration public static async Task WriteIntToStreamAsync(Stream s, int value, CancellationToken cancellationToken) Parameters Type Name Description Stream s Int32 value CancellationToken cancellationToken Returns Type Description Task WriteObjectToStream(Stream, Object) Declaration public static void WriteObjectToStream(Stream s, object obj) Parameters Type Name Description Stream s Object obj WriteObjectToStreamAsync(Stream, Object, CancellationToken) Declaration public static async Task WriteObjectToStreamAsync(Stream s, object obj, CancellationToken cancellationToken) Parameters Type Name Description Stream s Object obj CancellationToken cancellationToken Returns Type Description Task WriteStringToStream(Stream, String) Declaration public static void WriteStringToStream(Stream s, string text) Parameters Type Name Description Stream s String text WriteStringToStreamAsync(Stream, String, CancellationToken) Declaration public static async Task WriteStringToStreamAsync(Stream s, string text, CancellationToken cancellationToken) Parameters Type Name Description Stream s String text CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/IVLab.Utilities.TextureUtilities.html": {
    "href": "api/IVLab.Utilities.TextureUtilities.html",
    "title": "Class TextureUtilities | IVLab Unity Utilities",
    "keywords": "Class TextureUtilities Inheritance Object TextureUtilities Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public static class TextureUtilities Methods MakeTextureGradient(List<Texture2D>) Make a gradient out of a set of textures. Textures will be squashed together horizontally with no resizing. Declaration public static Texture2D MakeTextureGradient(List<Texture2D> textures) Parameters Type Name Description List < Texture2D > textures Returns Type Description Texture2D MakeTextureGradient(List<Texture2D>, List<Single>) Make a gradient out of a set of textures. Textures will be squashed together horizontally. The textures will be resized according to stops . Declaration public static Texture2D MakeTextureGradient(List<Texture2D> textures, List<float> stops) Parameters Type Name Description List < Texture2D > textures List < Single > stops Returns Type Description Texture2D ScaleTexture(Texture2D, Int32, Int32) Rescale a texture to a new height/width, using a point sampling method (TODO bilinear or gaussian?) WARNING: this is SLOW. Declaration public static Texture2D ScaleTexture(Texture2D inputTexture, int outputWidth, int outputHeight) Parameters Type Name Description Texture2D inputTexture Int32 outputWidth Int32 outputHeight Returns Type Description Texture2D TransposeTexture(Texture2D) Transpose a texture from tall to wide or vice versa. WARNING: this is SLOW. Declaration public static Texture2D TransposeTexture(Texture2D inputTexture) Parameters Type Name Description Texture2D inputTexture Returns Type Description Texture2D"
  },
  "api/IVLab.Utilities.TransformDebugger.html": {
    "href": "api/IVLab.Utilities.TransformDebugger.html",
    "title": "Class TransformDebugger | IVLab Unity Utilities",
    "keywords": "Class TransformDebugger Shows more verbose transform information than Unity's built-in Transform component display. Inheritance Object TransformDebugger Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class TransformDebugger : MonoBehaviour Fields localPosition Declaration public Vector3 localPosition Field Value Type Description Vector3 localRotation Declaration public Quaternion localRotation Field Value Type Description Quaternion localScale Declaration public Vector3 localScale Field Value Type Description Vector3 worldPosition Declaration public Vector3 worldPosition Field Value Type Description Vector3 worldRotation Declaration public Quaternion worldRotation Field Value Type Description Quaternion"
  },
  "api/IVLab.Utilities.UnityThreadScheduler.html": {
    "href": "api/IVLab.Utilities.UnityThreadScheduler.html",
    "title": "Class UnityThreadScheduler | IVLab Unity Utilities",
    "keywords": "Class UnityThreadScheduler Unity doesn't play nicely with threads, so the UnityThreadScheduler allows a programmer to better deal with asynchronous and threaded code. UnityThreadScheduler needs to either be attached to a GameObject, or UnityThreadScheduler.GetInstance() needs to be called somewhere in the code in order to use it. Inheritance Object Singleton < UnityThreadScheduler > UnityThreadScheduler Inherited Members Singleton<UnityThreadScheduler>.GetInstance() Singleton<UnityThreadScheduler>.Instance Singleton<UnityThreadScheduler>.Awake() Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class UnityThreadScheduler : Singleton<UnityThreadScheduler> Remarks Be extremely careful about exception handling with threads in Unity! They do not handle exceptions automatically and things will fail silently! Examples UnityThreadScheduler.GetInstance(); Task.Run(async () => { // Edit the transform in the main thread, since many MonoBehaviours // need to be run from the main thread. await UnityThreadScheduler.RunMainThreadWork(() => { transform.scale = Vector3.one * 2.0f }); }) Methods KickoffMainThreadWork(UnityThreadScheduler.UnityMethod, Action) Declaration public void KickoffMainThreadWork(UnityThreadScheduler.UnityMethod method, Action work) Parameters Type Name Description UnityThreadScheduler.UnityMethod method Action work KickoffMainThreadWork(Action) Declaration public void KickoffMainThreadWork(Action work) Parameters Type Name Description Action work RunMainThreadWork(UnityThreadScheduler.UnityMethod, Action) Declaration public async Task RunMainThreadWork(UnityThreadScheduler.UnityMethod method, Action work) Parameters Type Name Description UnityThreadScheduler.UnityMethod method Action work Returns Type Description Task RunMainThreadWork(Action) Declaration public async Task RunMainThreadWork(Action work) Parameters Type Name Description Action work Returns Type Description Task RunMainThreadWork<T>(UnityThreadScheduler.UnityMethod, Func<T>) Declaration public async Task<T> RunMainThreadWork<T>(UnityThreadScheduler.UnityMethod method, Func<T> work) Parameters Type Name Description UnityThreadScheduler.UnityMethod method Func <T> work Returns Type Description Task <T> Type Parameters Name Description T RunMainThreadWork<T>(Func<T>) Declaration public async Task<T> RunMainThreadWork<T>(Func<T> work) Parameters Type Name Description Func <T> work Returns Type Description Task <T> Type Parameters Name Description T"
  },
  "api/IVLab.Utilities.UnityThreadScheduler.UnityMethod.html": {
    "href": "api/IVLab.Utilities.UnityThreadScheduler.UnityMethod.html",
    "title": "Enum UnityThreadScheduler.UnityMethod | IVLab Unity Utilities",
    "keywords": "Enum UnityThreadScheduler.UnityMethod Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public enum UnityMethod Fields Name Description FixedUpdate LateUpdate Update"
  },
  "api/IVLab.Utilities.VirtualSpace.html": {
    "href": "api/IVLab.Utilities.VirtualSpace.html",
    "title": "Class VirtualSpace | IVLab Unity Utilities",
    "keywords": "Class VirtualSpace Inheritance Object Singleton < VirtualSpace > VirtualSpace Inherited Members Singleton<VirtualSpace>.GetInstance() Singleton<VirtualSpace>.Instance Singleton<VirtualSpace>.Awake() Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class VirtualSpace : Singleton<VirtualSpace>"
  },
  "api/IVLab.Utilities.XROMMCoordinates.html": {
    "href": "api/IVLab.Utilities.XROMMCoordinates.html",
    "title": "Class XROMMCoordinates | IVLab Unity Utilities",
    "keywords": "Class XROMMCoordinates Uses the CoordConversion class to provide routines for converting from XROMM coordinates to Unity coordinates. XROMM coordinates are: Right-Handed Up = +Z Forward = +Y Right = +X Unity coordinates are: Left-Handed Up = +Y Forward = +Z Right = +X Inheritance Object XROMMCoordinates Namespace : IVLab.Utilities Assembly : cs.temp.dll.dll Syntax public class XROMMCoordinates Methods FromUnity(Matrix4x4) Converts a rigid body transformation matrix in Unity coordinates to XROMM coordinates. Declaration public static Matrix4x4 FromUnity(Matrix4x4 unityMat) Parameters Type Name Description Matrix4x4 unityMat Matrix in Unity coordinates Returns Type Description Matrix4x4 XROMM version of the matrix FromUnity(Quaternion) Converts a quaternion in Unity coordinates to XROMM coordinates. Declaration public static Quaternion FromUnity(Quaternion unityQuat) Parameters Type Name Description Quaternion unityQuat Quaternion in Unity coordinates Returns Type Description Quaternion XROMM version of the quaternion FromUnity(Vector3) Converts a point or vector in Unity coordinates to XROMM coordinates. Declaration public static Vector3 FromUnity(Vector3 unityVector) Parameters Type Name Description Vector3 unityVector Point or vector in Unity coordinates Returns Type Description Vector3 XROMM version of the point or vector ToUnity(Matrix4x4) Converts a 4x4 rigid body transformation matrix defined in XROMM coordinates to Unity. Declaration public static Matrix4x4 ToUnity(Matrix4x4 xrommMat) Parameters Type Name Description Matrix4x4 xrommMat Rigid body transformation matrix in XROMM coordinates Returns Type Description Matrix4x4 Unity matrix ToUnity(Quaternion) Converts a quaternion from XROMM coordinates to Unity. Declaration public static Quaternion ToUnity(Quaternion xrommQuat) Parameters Type Name Description Quaternion xrommQuat Quaternion in XROMM coordinates Returns Type Description Quaternion Unity quaternion ToUnity(Vector3) Converts a point or vector from XROMM coordinates to Unity. Declaration public static Vector3 ToUnity(Vector3 xrommVector) Parameters Type Name Description Vector3 xrommVector Point or vector in XROMM coordinates Returns Type Description Vector3 Unity point or vector"
  },
  "index.html": {
    "href": "index.html",
    "title": "IVLab Utilities | IVLab Unity Utilities",
    "keywords": "IVLab Utilities This repository contains a collection of useful utilites for developing graphics, visualization, and mixed reality applications using the Unity game engine. Head on over to the Docs page to get started."
  }
}